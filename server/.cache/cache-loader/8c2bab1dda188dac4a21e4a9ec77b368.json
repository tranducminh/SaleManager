{"remainingRequest":"/Users/ducminh/sale-manager-server/node_modules/ts-loader/index.js??ref--10-1!/Users/ducminh/sale-manager-server/src/models/user.ts","dependencies":[{"path":"/Users/ducminh/sale-manager-server/src/models/user.ts","mtime":1582828187011},{"path":"/Users/ducminh/sale-manager-server/node_modules/cache-loader/dist/cjs.js","mtime":1582568609056},{"path":"/Users/ducminh/sale-manager-server/node_modules/ts-loader/index.js","mtime":1582568610681}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport mongoose from 'mongoose';\nimport bcryptjs from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport UserSchema from '../schemas/user';\nUserSchema.pre('save', function (next) {\n    return __awaiter(this, void 0, void 0, function () {\n        var user, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    user = this;\n                    if (!user.isModified('password')) return [3, 2];\n                    _a = user;\n                    return [4, bcryptjs.hash(user.password, 8)];\n                case 1:\n                    _a.password = _b.sent();\n                    _b.label = 2;\n                case 2:\n                    next();\n                    return [2];\n            }\n        });\n    });\n});\nUserSchema.methods.generateAuthToken = function () {\n    var user = this;\n    var token = jwt.sign({ userID: user._id }, process.env.JWT_KEY || 'CORONA', {\n        expiresIn: 60 * 60 * 24 * 1000,\n    });\n    return token;\n};\nUserSchema.methods.isValidPassword = function (password) {\n    return bcryptjs.compareSync(password, this.password);\n};\nexport default mongoose.model('User', UserSchema);\n",{"version":3,"file":"/Users/ducminh/sale-manager-server/src/models/user.ts","sourceRoot":"","sources":["/Users/ducminh/sale-manager-server/src/models/user.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,QAAQ,MAAM,UAAU,CAAA;AAC/B,OAAO,QAAQ,MAAM,UAAU,CAAA;AAE/B,OAAO,GAAG,MAAM,cAAc,CAAA;AAC9B,OAAO,UAA0B,MAAM,iBAAiB,CAAA;AAExD,UAAU,CAAC,GAAG,CAAe,MAAM,EAAE,UAAe,IAAkB;;;;;;oBAE9D,IAAI,GAAG,IAAoB,CAAA;yBAC3B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAA3B,cAA2B;oBAC3B,KAAA,IAAI,CAAA;oBAAY,WAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAA;;oBAArD,GAAK,QAAQ,GAAG,SAAqC,CAAA;;;oBAEzD,IAAI,EAAE,CAAA;;;;;CACT,CAAC,CAAA;AAEF,UAAU,CAAC,OAAO,CAAC,iBAAiB,GAAG;IACnC,IAAM,IAAI,GAAG,IAAoB,CAAA;IACjC,IAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAC,EAAG,OAAO,CAAC,GAAG,CAAC,OAAkB,IAAI,QAAQ,EAAE;QACpF,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;KACjC,CAAC,CAAA;IACF,OAAO,KAAK,CAAA;AAChB,CAAC,CAAA;AAED,UAAU,CAAC,OAAO,CAAC,eAAe,GAAG,UAAS,QAAgB;IAC1D,OAAO,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;AACxD,CAAC,CAAA;AAED,eAAe,QAAQ,CAAC,KAAK,CAAe,MAAM,EAAE,UAAU,CAAC,CAAA","sourcesContent":["import mongoose from 'mongoose'\nimport bcryptjs from 'bcryptjs'\nimport {NextFunction} from 'express'\nimport jwt from 'jsonwebtoken'\nimport UserSchema, {UserDocument} from '../schemas/user'\n\nUserSchema.pre<UserDocument>('save', async function(next: NextFunction) {\n    // Hash the password before saving the user model\n    let user = this as UserDocument\n    if (user.isModified('password')) {\n        user.password = await bcryptjs.hash(user.password, 8)\n    }\n    next()\n})\n\nUserSchema.methods.generateAuthToken = function() {\n    const user = this as UserDocument\n    const token = jwt.sign({userID: user._id}, (process.env.JWT_KEY as string) || 'CORONA', {\n        expiresIn: 60 * 60 * 24 * 1000,\n    })\n    return token\n}\n\nUserSchema.methods.isValidPassword = function(password: string): boolean {\n    return bcryptjs.compareSync(password, this.password)\n}\n\nexport default mongoose.model<UserDocument>('User', UserSchema)\n"]}]}