{"remainingRequest":"/Users/ducminh/sale-manager-server/node_modules/ts-loader/index.js??ref--10-1!/Users/ducminh/sale-manager-server/src/index.ts","dependencies":[{"path":"/Users/ducminh/sale-manager-server/src/index.ts","mtime":1582828612364},{"path":"/Users/ducminh/sale-manager-server/node_modules/cache-loader/dist/cjs.js","mtime":1582568609056},{"path":"/Users/ducminh/sale-manager-server/node_modules/ts-loader/index.js","mtime":1582568610681}],"contextDependencies":[],"result":["import opn from 'opn';\nimport startServer from './server';\ntry {\n    var PORT_1 = 8080;\n    var server_1;\n    if (module.hot) {\n        module.hot.accept();\n        module.hot.dispose(function (data) {\n            if (server_1) {\n                server_1.close();\n            }\n            data.hotReloaded = true;\n        });\n        module.hot.addStatusHandler(function (status) {\n            if (status === 'fail') {\n                process.exit(250);\n            }\n        });\n    }\n    var firstStartInDevMode_1 = module.hot && process.env.LAST_EXIT_CODE === '0' && (!module.hot.data || !module.hot.data.hotReloaded);\n    startServer(PORT_1).then(function (serverInstance) {\n        if (!module.hot || firstStartInDevMode_1) {\n            console.log(\"GraphQL Server is now running on http://localhost:\" + PORT_1);\n            if (firstStartInDevMode_1) {\n                opn(\"http://localhost:\" + PORT_1 + \"/api/swagger\");\n            }\n        }\n        server_1 = serverInstance;\n    });\n}\ncatch (e) {\n    console.error(e);\n    process.exit(1);\n}\n",{"version":3,"file":"/Users/ducminh/sale-manager-server/src/index.ts","sourceRoot":"","sources":["/Users/ducminh/sale-manager-server/src/index.ts"],"names":[],"mappings":"AACA,OAAO,GAAG,MAAM,KAAK,CAAA;AACrB,OAAO,WAAW,MAAM,UAAU,CAAA;AAElC,IAAI;IACA,IAAM,MAAI,GAAG,IAAI,CAAA;IAEjB,IAAI,QAAc,CAAA;IAElB,IAAI,MAAM,CAAC,GAAG,EAAE;QACZ,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAA;QACnB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,UAAC,IAAI;YACpB,IAAI,QAAM,EAAE;gBACR,QAAM,CAAC,KAAK,EAAE,CAAA;aACjB;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;QAC3B,CAAC,CAAC,CAAA;QACF,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAC,MAAM;YAC/B,IAAI,MAAM,KAAK,MAAM,EAAE;gBACnB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACpB;QACL,CAAC,CAAC,CAAA;KACL;IAGD,IAAM,qBAAmB,GACrB,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc,KAAK,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IAE1G,WAAW,CAAC,MAAI,CAAC,CAAC,IAAI,CAAC,UAAC,cAAc;QAClC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,qBAAmB,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,uDAAqD,MAAM,CAAC,CAAA;YACxE,IAAI,qBAAmB,EAAE;gBACrB,GAAG,CAAC,sBAAoB,MAAI,iBAAc,CAAC,CAAA;aAC9C;SACJ;QAED,QAAM,GAAG,cAAc,CAAA;IAC3B,CAAC,CAAC,CAAA;CACL;AAAC,OAAO,CAAC,EAAE;IACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAChB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;CAClB","sourcesContent":["import {Server} from 'http'\nimport opn from 'opn'\nimport startServer from './server'\n\ntry {\n    const PORT = 8080\n\n    let server: Server\n\n    if (module.hot) {\n        module.hot.accept()\n        module.hot.dispose((data) => {\n            if (server) {\n                server.close()\n            }\n            data.hotReloaded = true\n        })\n        module.hot.addStatusHandler((status) => {\n            if (status === 'fail') {\n                process.exit(250)\n            }\n        })\n    }\n\n    // eslint-disable-next-line operator-linebreak\n    const firstStartInDevMode =\n        module.hot && process.env.LAST_EXIT_CODE === '0' && (!module.hot.data || !module.hot.data.hotReloaded)\n\n    startServer(PORT).then((serverInstance) => {\n        if (!module.hot || firstStartInDevMode) {\n            console.log(`GraphQL Server is now running on http://localhost:${PORT}`)\n            if (firstStartInDevMode) {\n                opn(`http://localhost:${PORT}/api/swagger`)\n            }\n        }\n\n        server = serverInstance\n    })\n} catch (e) {\n    console.error(e)\n    process.exit(1)\n}\n"]}]}