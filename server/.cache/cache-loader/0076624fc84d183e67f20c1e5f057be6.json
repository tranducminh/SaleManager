{"remainingRequest":"/Users/ducminh/Desktop/sale-manager-server/node_modules/ts-loader/index.js??ref--10-1!/Users/ducminh/Desktop/sale-manager-server/src/graphql/resolvers/goods.ts","dependencies":[{"path":"/Users/ducminh/Desktop/sale-manager-server/src/graphql/resolvers/goods.ts","mtime":1583806659258},{"path":"/Users/ducminh/Desktop/sale-manager-server/node_modules/cache-loader/dist/cjs.js","mtime":1583194319303},{"path":"/Users/ducminh/Desktop/sale-manager-server/node_modules/ts-loader/index.js","mtime":1583194319624}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\nimport { ApolloError } from 'apollo-server-express';\nimport GoodsModel from '../../models/goods';\nexport default {\n    Query: {\n        getAllGoods: function (_obj, obj, _a) {\n            var isAuth = _a.isAuth;\n            return __awaiter(_this, void 0, void 0, function () {\n                var allGoods, i, error_1;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _b.trys.push([0, 2, , 3]);\n                            return [4, GoodsModel.find({ status: 'ACTIVE' })];\n                        case 1:\n                            allGoods = _b.sent();\n                            for (i = 0; i < allGoods.length; i++) {\n                                console.log(allGoods[i]._id);\n                                allGoods[i].id = allGoods[i]._id.toString();\n                            }\n                            return [2, allGoods];\n                        case 2:\n                            error_1 = _b.sent();\n                            return [2, new ApolloError(error_1)];\n                        case 3: return [2];\n                    }\n                });\n            });\n        },\n    },\n    Mutation: {\n        getGoods: function (_obj, _a, _b) {\n            var id = _a.id;\n            var isAuth = _b.isAuth;\n            return __awaiter(_this, void 0, void 0, function () {\n                var goods, error_2;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _c.trys.push([0, 2, , 3]);\n                            console.log(id);\n                            return [4, GoodsModel.findOne({ _id: id, status: 'ACTIVE' })];\n                        case 1:\n                            goods = _c.sent();\n                            console.log(goods);\n                            return [2, goods];\n                        case 2:\n                            error_2 = _c.sent();\n                            return [2, new ApolloError(error_2)];\n                        case 3: return [2];\n                    }\n                });\n            });\n        },\n        getManyGoods: function (_obj, _a, _b) {\n            var arrayID = _a.arrayID;\n            var isAuth = _b.isAuth;\n            return __awaiter(_this, void 0, void 0, function () {\n                var result, _c, _d, _i, item, id, goods, error_3;\n                return __generator(this, function (_e) {\n                    switch (_e.label) {\n                        case 0:\n                            _e.trys.push([0, 5, , 6]);\n                            result = [];\n                            console.log('aaa', arrayID[0]);\n                            _c = [];\n                            for (_d in arrayID)\n                                _c.push(_d);\n                            _i = 0;\n                            _e.label = 1;\n                        case 1:\n                            if (!(_i < _c.length)) return [3, 4];\n                            item = _c[_i];\n                            id = arrayID[item];\n                            console.log(id);\n                            return [4, GoodsModel.findOne({ _id: id, status: 'ACTIVE' })];\n                        case 2:\n                            goods = _e.sent();\n                            result.push({\n                                id: id,\n                                goods: goods,\n                            });\n                            _e.label = 3;\n                        case 3:\n                            _i++;\n                            return [3, 1];\n                        case 4: return [2, result];\n                        case 5:\n                            error_3 = _e.sent();\n                            return [2, new ApolloError(error_3)];\n                        case 6: return [2];\n                    }\n                });\n            });\n        },\n        createGoods: function (_obj, _a, _b) {\n            var name = _a.name, quantity = _a.quantity, price = _a.price, currencyUnit = _a.currencyUnit, description = _a.description, image = _a.image, userID = _a.userID;\n            var isAuth = _b.isAuth;\n            return __awaiter(_this, void 0, void 0, function () {\n                var goods;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            goods = new GoodsModel({\n                                name: name,\n                                quantity: quantity,\n                                price: price,\n                                currencyUnit: currencyUnit,\n                                description: description,\n                                image: image,\n                                userID: userID,\n                            });\n                            return [4, goods.save()];\n                        case 1:\n                            _c.sent();\n                            GoodsModel.updateOne({ _id: goods._id }, { $set: { id: goods._id.toString() } });\n                            return [2, goods];\n                    }\n                });\n            });\n        },\n    },\n};\n",{"version":3,"file":"/Users/ducminh/Desktop/sale-manager-server/src/graphql/resolvers/goods.ts","sourceRoot":"","sources":["/Users/ducminh/Desktop/sale-manager-server/src/graphql/resolvers/goods.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-plusplus */\nimport {ApolloError} from 'apollo-server-express'\nimport GoodsModel from '../../models/goods'\n\nexport default {\n    Query: {\n        getAllGoods: async (_obj: any, obj: any, {isAuth}: {isAuth: boolean}) => {\n            try {\n                // console.log('user: ', auth)\n                const allGoods = await GoodsModel.find({status: 'ACTIVE'})\n                for (let i = 0; i < allGoods.length; i++) {\n                    console.log(allGoods[i]._id)\n                    allGoods[i].id = allGoods[i]._id.toString()\n                }\n                return allGoods\n            } catch (error) {\n                return new ApolloError(error)\n            }\n        },\n    },\n    Mutation: {\n        getGoods: async (_obj: any, {id}: {id: string}, {isAuth}: {isAuth: boolean}) => {\n            try {\n                console.log(id)\n                let goods = await GoodsModel.findOne({_id: id, status: 'ACTIVE'})\n                console.log(goods)\n                // let goods = await GoodsModel.find({_id: mongoose.Types.ObjectId(id), status: 'ACTIVE'})\n                return goods\n            } catch (error) {\n                return new ApolloError(error)\n            }\n        },\n        getManyGoods: async (_obj: any, {arrayID}: {arrayID: string[]}, {isAuth}: {isAuth: boolean}) => {\n            try {\n                // console.log('user: ', auth)\n                let result = []\n                console.log('aaa', arrayID[0])\n                for (let item in arrayID) {\n                    let id = arrayID[item]\n                    console.log(id)\n                    let goods = await GoodsModel.findOne({_id: id, status: 'ACTIVE'})\n                    result.push({\n                        id,\n                        goods,\n                    })\n                }\n\n                return result\n            } catch (error) {\n                return new ApolloError(error)\n            }\n        },\n        createGoods: async (\n            _obj: any,\n            {\n                name,\n                quantity,\n                price,\n                currencyUnit,\n                description,\n                image,\n                userID,\n            }: {\n                name: string\n                quantity: number\n                price: number\n                currencyUnit: string\n                description?: string\n                image?: string\n                userID?: string\n            },\n            {isAuth}: {isAuth: boolean}\n        ) => {\n            // if (!isAuth) return new ApolloError('authenticate is required')\n            const goods = new GoodsModel({\n                name,\n                quantity,\n                price,\n                currencyUnit,\n                description,\n                image,\n                userID,\n            })\n\n            await goods.save()\n            GoodsModel.updateOne({_id: goods._id}, {$set: {id: goods._id.toString()}})\n            return goods\n        },\n    },\n}\n"]}]}